# Generated from ../../../fodtlmon/parser/FODTL.g4 by ANTLR 4.5.1
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2#")
        buf.write("\u00bf\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\3\2\3\2\3\3\3\3\3")
        buf.write("\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r")
        buf.write("\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\34\5\34\u008a\n\34\3\34\3\34\3")
        buf.write("\34\7\34\u008f\n\34\f\34\16\34\u0092\13\34\3\35\6\35\u0095")
        buf.write("\n\35\r\35\16\35\u0096\3\36\5\36\u009a\n\36\3\36\3\36")
        buf.write("\3\36\3\36\3\37\6\37\u00a1\n\37\r\37\16\37\u00a2\3\37")
        buf.write("\3\37\3 \6 \u00a8\n \r \16 \u00a9\3!\3!\7!\u00ae\n!\f")
        buf.write("!\16!\u00b1\13!\3!\3!\3\"\3\"\7\"\u00b7\n\"\f\"\16\"\u00ba")
        buf.write("\13\"\3\"\3\"\3\"\3\"\4\u00af\u00b8\2#\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#\3\2\4\4\2C\\c|\5\2\13\f\17")
        buf.write("\17\"\"\u00c7\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t")
        buf.write("\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3")
        buf.write("\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2")
        buf.write("\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2")
        buf.write("\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2")
        buf.write("\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\3E\3\2\2\2\5G\3\2\2")
        buf.write("\2\7I\3\2\2\2\tK\3\2\2\2\13M\3\2\2\2\rO\3\2\2\2\17Q\3")
        buf.write("\2\2\2\21S\3\2\2\2\23U\3\2\2\2\25W\3\2\2\2\27\\\3\2\2")
        buf.write("\2\31b\3\2\2\2\33d\3\2\2\2\35h\3\2\2\2\37j\3\2\2\2!l\3")
        buf.write("\2\2\2#o\3\2\2\2%r\3\2\2\2\'v\3\2\2\2)z\3\2\2\2+|\3\2")
        buf.write("\2\2-~\3\2\2\2/\u0080\3\2\2\2\61\u0082\3\2\2\2\63\u0084")
        buf.write("\3\2\2\2\65\u0086\3\2\2\2\67\u0089\3\2\2\29\u0094\3\2")
        buf.write("\2\2;\u0099\3\2\2\2=\u00a0\3\2\2\2?\u00a7\3\2\2\2A\u00ab")
        buf.write("\3\2\2\2C\u00b4\3\2\2\2EF\7*\2\2F\4\3\2\2\2GH\7+\2\2H")
        buf.write("\6\3\2\2\2IJ\7]\2\2J\b\3\2\2\2KL\7_\2\2L\n\3\2\2\2MN\7")
        buf.write("\60\2\2N\f\3\2\2\2OP\7<\2\2P\16\3\2\2\2QR\7?\2\2R\20\3")
        buf.write("\2\2\2ST\7.\2\2T\22\3\2\2\2UV\7)\2\2V\24\3\2\2\2WX\7v")
        buf.write("\2\2XY\7t\2\2YZ\7w\2\2Z[\7g\2\2[\26\3\2\2\2\\]\7h\2\2")
        buf.write("]^\7c\2\2^_\7n\2\2_`\7u\2\2`a\7g\2\2a\30\3\2\2\2bc\7\u0080")
        buf.write("\2\2c\32\3\2\2\2de\7p\2\2ef\7q\2\2fg\7v\2\2g\34\3\2\2")
        buf.write("\2hi\7(\2\2i\36\3\2\2\2jk\7~\2\2k \3\2\2\2lm\7/\2\2mn")
        buf.write("\7@\2\2n\"\3\2\2\2op\7?\2\2pq\7@\2\2q$\3\2\2\2rs\7>\2")
        buf.write("\2st\7/\2\2tu\7@\2\2u&\3\2\2\2vw\7>\2\2wx\7?\2\2xy\7@")
        buf.write("\2\2y(\3\2\2\2z{\7#\2\2{*\3\2\2\2|}\7A\2\2},\3\2\2\2~")
        buf.write("\177\7I\2\2\177.\3\2\2\2\u0080\u0081\7Z\2\2\u0081\60\3")
        buf.write("\2\2\2\u0082\u0083\7H\2\2\u0083\62\3\2\2\2\u0084\u0085")
        buf.write("\7W\2\2\u0085\64\3\2\2\2\u0086\u0087\7T\2\2\u0087\66\3")
        buf.write("\2\2\2\u0088\u008a\t\2\2\2\u0089\u0088\3\2\2\2\u008a\u0090")
        buf.write("\3\2\2\2\u008b\u008f\t\2\2\2\u008c\u008f\59\35\2\u008d")
        buf.write("\u008f\7a\2\2\u008e\u008b\3\2\2\2\u008e\u008c\3\2\2\2")
        buf.write("\u008e\u008d\3\2\2\2\u008f\u0092\3\2\2\2\u0090\u008e\3")
        buf.write("\2\2\2\u0090\u0091\3\2\2\2\u00918\3\2\2\2\u0092\u0090")
        buf.write("\3\2\2\2\u0093\u0095\4\62;\2\u0094\u0093\3\2\2\2\u0095")
        buf.write("\u0096\3\2\2\2\u0096\u0094\3\2\2\2\u0096\u0097\3\2\2\2")
        buf.write("\u0097:\3\2\2\2\u0098\u009a\7\17\2\2\u0099\u0098\3\2\2")
        buf.write("\2\u0099\u009a\3\2\2\2\u009a\u009b\3\2\2\2\u009b\u009c")
        buf.write("\7\f\2\2\u009c\u009d\3\2\2\2\u009d\u009e\b\36\2\2\u009e")
        buf.write("<\3\2\2\2\u009f\u00a1\t\3\2\2\u00a0\u009f\3\2\2\2\u00a1")
        buf.write("\u00a2\3\2\2\2\u00a2\u00a0\3\2\2\2\u00a2\u00a3\3\2\2\2")
        buf.write("\u00a3\u00a4\3\2\2\2\u00a4\u00a5\b\37\3\2\u00a5>\3\2\2")
        buf.write("\2\u00a6\u00a8\7\"\2\2\u00a7\u00a6\3\2\2\2\u00a8\u00a9")
        buf.write("\3\2\2\2\u00a9\u00a7\3\2\2\2\u00a9\u00aa\3\2\2\2\u00aa")
        buf.write("@\3\2\2\2\u00ab\u00af\7$\2\2\u00ac\u00ae\13\2\2\2\u00ad")
        buf.write("\u00ac\3\2\2\2\u00ae\u00b1\3\2\2\2\u00af\u00b0\3\2\2\2")
        buf.write("\u00af\u00ad\3\2\2\2\u00b0\u00b2\3\2\2\2\u00b1\u00af\3")
        buf.write("\2\2\2\u00b2\u00b3\7$\2\2\u00b3B\3\2\2\2\u00b4\u00b8\7")
        buf.write("\'\2\2\u00b5\u00b7\13\2\2\2\u00b6\u00b5\3\2\2\2\u00b7")
        buf.write("\u00ba\3\2\2\2\u00b8\u00b9\3\2\2\2\u00b8\u00b6\3\2\2\2")
        buf.write("\u00b9\u00bb\3\2\2\2\u00ba\u00b8\3\2\2\2\u00bb\u00bc\7")
        buf.write("\f\2\2\u00bc\u00bd\3\2\2\2\u00bd\u00be\b\"\2\2\u00beD")
        buf.write("\3\2\2\2\f\2\u0089\u008e\u0090\u0096\u0099\u00a2\u00a9")
        buf.write("\u00af\u00b8\4\2\3\2\b\2\2")
        return buf.getvalue()


class FODTLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    ID = 27
    INT = 28
    NEWLINE = 29
    WS = 30
    BLANK = 31
    STRING = 32
    COMMENT = 33

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "'.'", "':'", "'='", "','", "'''", 
            "'true'", "'false'", "'~'", "'not'", "'&'", "'|'", "'->'", "'=>'", 
            "'<->'", "'<=>'", "'!'", "'?'", "'G'", "'X'", "'F'", "'U'", 
            "'R'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "NEWLINE", "WS", "BLANK", "STRING", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "ID", "INT", "NEWLINE", "WS", "BLANK", "STRING", "COMMENT" ]

    grammarFileName = "FODTL.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


